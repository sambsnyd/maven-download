/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.openrewrite.ExecutionContext;
import org.openrewrite.InMemoryExecutionContext;
import org.openrewrite.maven.MavenDownloadingException;
import org.openrewrite.maven.MavenExecutionContextView;
import org.openrewrite.maven.MavenSettings;
import org.openrewrite.maven.internal.MavenPomDownloader;
import org.openrewrite.maven.tree.GroupArtifactVersion;
import org.openrewrite.maven.tree.MavenRepository;
import org.openrewrite.maven.tree.Pom;

import java.util.Collections;

public class App {

    public static void main(String[] args) throws MavenDownloadingException {
        GroupArtifactVersion gav;
        if (args.length > 0) {
            String[] parts = args[0].split(":");
            gav = new GroupArtifactVersion(parts[0], parts[1], parts[2]);
        } else {
            gav = new GroupArtifactVersion("io.netty", "netty-tcnative-boringssl-static", "2.0.26.Final");
        }
        MavenExecutionContextView ctx = MavenExecutionContextView.view(new InMemoryExecutionContext());
        MavenSettings settings = MavenSettings.readMavenSettingsFromDisk(ctx);
        if (settings == null) {
            System.out.println("No Maven settings found on disk");
        }
        ctx.setMavenSettings(settings);
        System.out.println(ctx.getRepositories().size() + " repositories in use");
        for (MavenRepository repository : ctx.getRepositories()) {
            System.out.println("    " + repository.getUri());
        }

        MavenPomDownloader mpd = new MavenPomDownloader(ctx);

        System.out.println("Downloading pom for " + gav);
        Pom download = mpd.download(gav, null, null, ctx.getRepositories());
        System.out.println("Downloaded " + download.getGav() + " from " + (download.getRepository() == null ? "unknown uri" : download.getRepository().getUri()));
    }
}
